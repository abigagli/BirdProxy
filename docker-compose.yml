version: "3"
networks:
  birdserver_default:
    external: true
services:
  proxy:
    restart: unless-stopped
    build:
      context: .
      #      args:
      #        API_SERVER_PORT: ${API_SERVER_PORT}
      #        FRONTEND_SERVER_PORT: ${FRONTEND_SERVER_PORT}
      dockerfile: Dockerfile
    container_name: birdproxy
    image: "birdproxy"
    #    environment:
    #      - NODE_ENV=production
    #      - MONGO_INITDB_ROOT_USERNAME
    #      - MONGO_INITDB_ROOT_PASSWORD
    #      - MONGO_DB
    #      - MONGO_HOST
    #      - MONGO_PORT
    #      - API_SERVER_PORT
    #      - FRONTEND_SERVER_PORT
    ports:
      - 80:80
      - 2333:80
      - 443:443
        #    volumes:
        #      - ./FRONTEND:/nodeapp/FRONTEND
        #    healthcheck:
        #      test: ["CMD", "curl", "-f", "http://localhost:${API_SERVER_PORT}/health"]
        #      interval: 1m30s
        #      timeout: 10s
        #      retries: 3
        #      start_period: 40s
        #    volumes:
        #      - ./nonce:/usr
    networks:
      - birdserver_default
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot
    container_name: certbot
    profiles:
      - certificate
        #    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
